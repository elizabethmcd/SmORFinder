name: SmORFinder Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.7.12'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          gcc \
          g++ \
          make \
          libpython3-dev \
          prodigal \
          hmmer \
          wget \
          curl
        sudo rm -rf /var/lib/apt/lists/*
    
    - name: Install SmORFinder
      run: |
        pip install -e .
        smorf  # Download required data files
    
    - name: List test files
      run: |
        echo "Available test genome files:"
        ls -la test/genome_files/
        echo "Checking for required files..."
        for genome in test/genome_files/*.fna; do
          if [ -f "$genome" ]; then
            genome_name=$(basename "$genome" .fna)
            echo "Found genome: $genome_name"
            if [ -f "test/genome_files/${genome_name}.faa" ] && [ -f "test/genome_files/${genome_name}.gff" ]; then
              echo "✓ All files present for $genome_name"
            else
              echo "✗ Missing .faa or .gff for $genome_name"
            fi
          fi
        done
    
    - name: Run standard SmORFinder on genome1
      run: |
        smorf single test/genome_files/ZhaoCC_2020__SRS5803191__bin.31.fna --outdir test_output_standard_genome1 --force
    
    - name: Run custom SmORFinder on genome1
      run: |
        smorf custom test/genome_files/ZhaoCC_2020__SRS5803191__bin.31.fna test/genome_files/ZhaoCC_2020__SRS5803191__bin.31.faa test/genome_files/ZhaoCC_2020__SRS5803191__bin.31.gff --outdir test_output_custom_genome1 --force
    
    - name: Run standard SmORFinder on genome2
      run: |
        smorf single test/genome_files/160.fna --outdir test_output_standard_genome2 --force
    
    - name: Run custom SmORFinder on genome2
      run: |
        smorf custom test/genome_files/160.fna test/genome_files/160.faa test/genome_files/160.gff --outdir test_output_custom_genome2 --force
    
    - name: Create comparison script
      run: |
        mkdir -p scripts
        cat > scripts/compare_results.py << 'EOF'
        #!/usr/bin/env python3
        """
        Compare results from standard and custom SmORFinder runs.
        Ensures identical protein sequences except for headers.
        """
        
        import sys
        import os
        from Bio import SeqIO
        
        def normalize_fasta_headers(fasta_file):
            """Extract protein sequences and sort them for comparison."""
            sequences = []
            for record in SeqIO.parse(fasta_file, 'fasta'):
                sequences.append(str(record.seq))
            return sorted(sequences)
        
        def compare_fasta_files(file1, file2, description):
            """Compare two FASTA files by their sequences (ignoring headers)."""
            print(f"\nComparing {description}...")
            
            if not os.path.exists(file1):
                print(f"ERROR: {file1} not found")
                return False
            if not os.path.exists(file2):
                print(f"ERROR: {file2} not found")
                return False
            
            seqs1 = normalize_fasta_headers(file1)
            seqs2 = normalize_fasta_headers(file2)
            
            if seqs1 == seqs2:
                print(f"✓ {description}: Sequences are identical ({len(seqs1)} proteins)")
                return True
            else:
                print(f"✗ {description}: Sequences differ!")
                print(f"  Standard: {len(seqs1)} proteins")
                print(f"  Custom: {len(seqs2)} proteins")
                return False
        
        def main():
            print("SmORFinder Results Comparison")
            print("=" * 40)
            
            all_tests_passed = True
            
            # Test genome1
            standard_faa = "test_output_standard_genome1/test_output_standard_genome1.faa"
            custom_faa = "test_output_custom_genome1/test_output_custom_genome1.faa"
            
            if not compare_fasta_files(standard_faa, custom_faa, "genome1 protein sequences"):
                all_tests_passed = False
            
            # Test genome2
            standard_faa = "test_output_standard_genome2/test_output_standard_genome2.faa"
            custom_faa = "test_output_custom_genome2/test_output_custom_genome2.faa"
            
            if not compare_fasta_files(standard_faa, custom_faa, "genome2 protein sequences"):
                all_tests_passed = False
            
            print("\n" + "=" * 40)
            if all_tests_passed:
                print("✓ ALL TESTS PASSED: Results are identical except for headers")
                sys.exit(0)
            else:
                print("✗ TESTS FAILED: Results differ between standard and custom runs")
                sys.exit(1)
        
        if __name__ == '__main__':
            main()
        EOF
        chmod +x scripts/compare_results.py
    
    - name: Compare results
      run: |
        python scripts/compare_results.py
    
    - name: Show test output structure
      run: |
        echo "=== Test Output Structure ==="
        find test_output_* -name "*.faa" -o -name "*.tsv" | head -10
        echo "=== File sizes ==="
        du -h test_output_*
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          test_output_*/
          test/genome_files/
          scripts/ 